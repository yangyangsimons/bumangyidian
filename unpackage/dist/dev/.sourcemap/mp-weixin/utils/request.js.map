{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["/**\n * 请求封装函数\n * @param {string} url - 请求地址\n * @param {string} method - 请求方法，默认为GET\n * @param {object} data - 请求数据\n * @param {object} header - 自定义请求头\n * @returns {Promise} - 返回Promise对象\n */\nconst request = (url, method = 'GET', data = {}, header = {}) => {\n  // 从本地存储获取token\n  const token = uni.getStorageSync('token') || ''\n\n  // 设置请求头，加入token\n  const defaultHeader = {\n    'Content-Type': 'application/json',\n    Authorization: token ? `bearer ${token}` : '', // 常见的token携带方式\n    ...header, // 允许自定义header覆盖默认设置\n  }\n\n  // 返回Promise包装的请求\n  return new Promise((resolve, reject) => {\n    uni.request({\n      url,\n      method,\n      data,\n      header: defaultHeader,\n      success(res) {\n        // 后端返回响应状态码200视为成功\n        // console.log('请求成功:', res)\n        if (res.statusCode == 200 && res.data.code == 0) {\n          resolve(res.data)\n        } else {\n          reject(res.data || res)\n        }\n      },\n      fail(err) {\n        reject(err)\n      },\n    })\n  })\n}\n\nexport default request\n"],"names":["uni"],"mappings":";;AAQK,MAAC,UAAU,CAAC,KAAK,SAAS,OAAO,OAAO,CAAE,GAAE,SAAS,OAAO;AAE/D,QAAM,QAAQA,cAAG,MAAC,eAAe,OAAO,KAAK;AAG7C,QAAM,gBAAgB;AAAA,IACpB,gBAAgB;AAAA,IAChB,eAAe,QAAQ,UAAU,KAAK,KAAK;AAAA;AAAA,IAC3C,GAAG;AAAA;AAAA,EACJ;AAGD,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,kBAAAA,MAAI,QAAQ;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ,KAAK;AAGX,YAAI,IAAI,cAAc,OAAO,IAAI,KAAK,QAAQ,GAAG;AAC/C,kBAAQ,IAAI,IAAI;AAAA,QAC1B,OAAe;AACL,iBAAO,IAAI,QAAQ,GAAG;AAAA,QACvB;AAAA,MACF;AAAA,MACD,KAAK,KAAK;AACR,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;;"}