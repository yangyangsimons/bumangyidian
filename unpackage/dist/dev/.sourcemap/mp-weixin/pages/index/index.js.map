{"version":3,"file":"index.js","sources":["pages/index/index.vue","pages/index/index.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"cover\">\n    <image class=\"global-title\" src=\"../../static/global-title.png\"></image>\n    <!-- 当金种子杯模式有效时显示切换按钮 -->\n    <button\n      v-if=\"isGoldModeAvailable\"\n      class=\"changeModel\"\n      @click=\"toggleSystemModel\"\n    >\n      <view class=\"botton-title\">\n        <image\n          :src=\"changeModelSrc\"\n          mode=\"scaleToFill\"\n          class=\"change-model-pic\"\n        />\n        <text class=\"model\">{{\n          currentModel === '常规模式' ? '「不芒」学长' : '「树洞」模式'\n        }}</text>\n      </view>\n\n      <text class=\"talk\">{{\n        currentModel === '常规模式' ? '创新创业专家解读' : '陪你早安到晚安'\n      }}</text>\n    </button>\n\n    <image :src=\"bgSrc\" class=\"cover-image\" mode=\"aspectFill\" />\n    <!-- 根据shine_point的valid显示亮点 -->\n    <view\n      v-if=\"shinePointVisible\"\n      class=\"shine-point\"\n      :style=\"{\n        left: `${shinePointConfig.x_ratio * 100}%`,\n        top: `${shinePointConfig.y_ratio * 100}%`,\n      }\"\n    >\n      <image\n        class=\"shining-image\"\n        src=\"../../static/shining-point.png\"\n        mode=\"scaleToFill\"\n      />\n      <text class=\"shining-text\">{{ shinePointConfig.text }} </text>\n    </view>\n    <record-animation />\n    <view\n      class=\"subject-container\"\n      v-if=\"currentModel != '金种子杯模式' && subjectShow\"\n      :style=\"{ color: systemColor }\"\n    >\n      <view class=\"title\">今日话题</view>\n      <view class=\"subject-scroll-view\">\n        <view\n          class=\"marquee-content\"\n          :style=\"{ transform: `translateX(${-scrollPosition}px)` }\"\n        >\n          <view class=\"subject\">{{ subejctText }}</view>\n          <view class=\"space\" v-if=\"needScroll\"></view>\n          <view class=\"subject\" v-if=\"needScroll\">{{ subejctText }}</view>\n        </view>\n      </view>\n    </view>\n    <view class=\"barrage-container\">\n      <barrage />\n    </view>\n    <chat @submit=\"handleSubmit\" />\n    <view class=\"ad-container\" v-if=\"showAd\">\n      <view class=\"img-container\">\n        <swiper\n          @click=\"adNav(index)\"\n          class=\"ad-swiper\"\n          :indicator-dots=\"showDots\"\n          :autoplay=\"autoplay\"\n          :interval=\"interval\"\n          :duration=\"duration\"\n          :circular=\"circular\"\n          @change=\"handleAdChange\"\n        >\n          <swiper-item\n            v-for=\"(imageUrl, index) in adList\"\n            :key=\"index\"\n            class=\"swiper-item\"\n          >\n            <image\n              :src=\"imageUrl\"\n              class=\"ad-image\"\n              mode=\"aspectFill\"\n              @tap=\"handleAdClick(index)\"\n            />\n          </swiper-item>\n        </swiper>\n\n        <!-- 自定义指示点 -->\n        <view class=\"custom-indicators\">\n          <view\n            v-for=\"(_, index) in adList\"\n            :key=\"index\"\n            class=\"indicator-dot\"\n            :class=\"{ active: current === index }\"\n          ></view>\n        </view>\n      </view>\n      <img class=\"close\" src=\"../../static/close.png\" @tap=\"handleAdClose\" />\n    </view>\n    <guide />\n  </view>\n</template>\n\n<script setup>\n  import { ref, reactive, computed, nextTick, watch } from 'vue'\n  import { wsUrl, baseUrl } from '../../utils/config'\n  import {\n    onLoad,\n    onUnload,\n    onShow,\n    onHide,\n    onShareAppMessage,\n    onShareTimeline,\n  } from '@dcloudio/uni-app'\n  import request from '@/utils/request'\n  import barrage from '@/components/barrage/barrage.vue'\n  import chat from '@/components/chat/chat.vue'\n  import guide from '@/components/guide/guide.vue'\n  import { useWebSocketStore } from '@/stores/websocket'\n  import { useBarrageStore } from '../../stores/barrage'\n  import { useModelStore } from '../../stores/model'\n  import { dmReport } from '../../utils/report'\n  // 导入音频播放器状态管理\n  import { useAudioPlayerStore } from '@/stores/audioPlayer'\n  import recordAnimation from '../../components/record-animation/record-animation.vue'\n  //导入主题管理\n  import { useSubjectStore } from '../../stores/subject'\n  import { useIsRadioStore } from '../../stores/isRadio'\n  import { subjectShowStore } from '../../stores/subjectShow'\n  import { usePlaceholderStore } from '../../stores/placeholderStore'\n  import { useToggleModelStore } from '../../stores/toggleModelStore'\n  const showAd = ref(false)\n  const adList = ref([])\n  const showDots = ref(false)\n  const toggleModelStore = useToggleModelStore()\n  const sptime = ref(0)\n  const current = ref(0)\n  const handleAdClose = () => {\n    showAd.value = false\n  }\n  const adNav = (index) => {\n    // 根据类型确定跳转的URL\n    const url =\n      '/pages/ad/ad?address=https://mp.weixin.qq.com/s/E0GNo-SGbGQuIJIqfdWd7A'\n\n    // 跳转到协议展示页面\n    uni.navigateTo({ url })\n  }\n  const handleAdChange = (e) => {\n    current.value = e.detail.current\n  }\n\n  // 监听 store 中的状态变化\n  watch(\n    () => toggleModelStore.shouldToggleModel,\n    (newValue) => {\n      if (newValue) {\n        // 如果状态为 true，则执行 toggleModelchange 函数\n        toggleSystemModel()\n        // 执行完后重置状态\n        toggleModelStore.resetModelChangeFlag()\n      }\n    }\n  )\n  const placeholderStore = usePlaceholderStore()\n\n  //主题管理\n  const systemColor = ref('rgba(26, 28, 30, 1);')\n  const subjectshowStore = subjectShowStore()\n  const subjectShow = computed(() => {\n    return isRadioStore.isRadio || subjectshowStore.subjectShow ? true : false\n  })\n  //导入电台模式状态\n  const isRadioStore = useIsRadioStore()\n  const isRadio = computed(() => isRadioStore.isRadio)\n  const changeModelSrc = ref('../../static/changeModel.png')\n\n  // 响应式数据\n  const scrollPosition = ref(0)\n  const needScroll = ref(false)\n  let scrollTimer = null\n  let textWidth = 0\n  const scrollSpeed = 1 // 每次移动的像素\n  const scrollDelay = 10 // 滚动间隔（毫秒）\n  // 生命周期钩子\n  onShow(() => {\n    nextTick(() => {\n      initScroll()\n    })\n  })\n\n  onHide(() => {\n    stopScroll()\n  })\n\n  // 方法\n  const initScroll = () => {\n    const query = uni.createSelectorQuery()\n    query\n      .select('.subject')\n      .boundingClientRect((textRect) => {\n        query\n          .select('.subject-scroll-view')\n          .boundingClientRect((containerRect) => {\n            if (textRect && containerRect) {\n              textWidth = textRect.width\n\n              // 如果文本宽度大于容器宽度，需要滚动\n              if (textRect.width > containerRect.width) {\n                needScroll.value = true\n                startScroll()\n              }\n            }\n          })\n          .exec()\n      })\n      .exec()\n  }\n\n  const startScroll = () => {\n    stopScroll()\n\n    scrollTimer = setInterval(() => {\n      scrollPosition.value += scrollSpeed\n\n      // 当滚动到第一个文本的末尾时，重置位置\n      if (scrollPosition.value >= textWidth + 60) {\n        scrollPosition.value = 0\n      }\n    }, scrollDelay)\n  }\n\n  const stopScroll = () => {\n    if (scrollTimer) {\n      clearInterval(scrollTimer)\n      scrollTimer = null\n    }\n  }\n\n  // 切换非电台模式\n  const toggleRadioModel = () => {\n    isRadioStore.setIsRadio(!isRadio.value)\n    console.log('切换电台模式', isRadio.value)\n  }\n\n  // 在主题更新时（如获取新主题后）\n  // nextTick(startAutoScroll)\n\n  const bgSrc = ref('../../static/index-bg.png')\n  const messages = ref([])\n  const subejctText = computed(() => sbStore.subject)\n  //初始化subject管理\n  const sbStore = useSubjectStore()\n  subejctText.value = sbStore.subject\n\n  const wsStore = useWebSocketStore()\n  // 初始化音频播放器状态管理\n  const audioPlayerStore = useAudioPlayerStore()\n  // 初始化弹幕状态管理\n  const barrageStore = useBarrageStore()\n\n  // 初始化模型状态管理\n  const modelStore = useModelStore()\n  // 添加状态管理\n  const currentModel = ref('常规模式')\n  const isGoldModeAvailable = ref(false)\n  const systemModelConfig = reactive({\n    常规模式: {\n      pic_id: 0,\n      pic_url: '',\n    },\n    金种子杯模式: {\n      pic_id: 0,\n      pic_url: '',\n      valid: false,\n    },\n  })\n  const shinePointConfig = reactive({\n    text: '',\n    valid: 0,\n    x_ratio: 0,\n    y_ratio: 0,\n  })\n\n  // 计算属性：是否显示亮点\n  const shinePointVisible = computed(() => {\n    if (typeof shinePointConfig.valid === 'boolean') {\n      return shinePointConfig.valid\n    } else {\n      return !!shinePointConfig.valid // 将数字转为布尔值\n    }\n  })\n\n  // 切换系统模式 - 只更新UI，不发送WebSocket消息\n  // 添加防抖变量\n  const isTogglingModel = ref(false)\n\n  // 切换系统模式 - 只更新UI，不发送WebSocket消息\n  const toggleSystemModel = async () => {\n    uni.showToast({\n      title: '切换中...',\n      icon: 'loading',\n      duration: 2500,\n    })\n    // 防止重复点击\n    if (isTogglingModel.value) {\n      console.log('切换模式操作进行中，请勿重复点击')\n      uni.showToast({\n        title: '操作进行中，请稍候',\n        icon: 'none',\n      })\n      return\n    }\n    try {\n      isTogglingModel.value = true\n\n      // 更新当前模式\n      currentModel.value =\n        currentModel.value === '常规模式' ? '金种子杯模式' : '常规模式'\n      // 更新背景图\n      bgSrc.value = systemModelConfig[currentModel.value].pic_url\n\n      console.log(`切换到${currentModel.value}`)\n      audioPlayerStore.reportCurrentProgress()\n      audioPlayerStore.stopAllAudio()\n      // audioPlayerStore.resetBgMusic()\n      // audioPlayerStore.resetTtsAudio()\n      console.log('停止并清空所有音频队列')\n      barrageStore.clearMessages()\n      console.log('清空消息列表')\n      // 更新状态管理\n      if (currentModel.value === '金种子杯模式') {\n        dmReport(\n          'click',\n          {},\n          {\n            page: 'homePage',\n            contents: [\n              {\n                element_id: 'content',\n                element_content: '点击切换到金种子',\n              },\n            ],\n          }\n        )\n        //更新随机的placeholder\n\n        modelStore.setModel('金种子杯模式')\n        placeholderStore.setRandomSpecialPlaceholder()\n        isRadioStore.setIsRadio(false)\n      } else {\n        dmReport(\n          'click',\n          {},\n          {\n            page: 'homePage',\n            contents: [\n              {\n                element_id: 'content',\n                element_content: '点击切换到常规模式',\n              },\n            ],\n          }\n        )\n        modelStore.setModel('常规模式')\n        placeholderStore.setRandomNormalPlaceholder()\n      }\n      // 上报当前音频播放状态,停止所有音频并清空所有音频队列\n      // 关闭连接\n      await wsStore.close()\n      console.log('模式切换WebSocket连接已关闭')\n\n      // 等待一段时间，确保连接完全关闭\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n\n      try {\n        // 重新连接\n        await wsStore.connect()\n        console.log('切换模式的socket重新连接成功')\n\n        // 等待连接稳定\n        await new Promise((resolve) => setTimeout(resolve, 1000))\n\n        // 发送模式切换消息\n        if (currentModel.value === '金种子杯模式') {\n          changeModelSrc.value = '../../static/changeModel-2.png'\n          await wsStore.sendMessage({\n            system_model: currentModel.value,\n            input_type: 3,\n            text: '',\n          })\n          console.log('模式切换消息发送成功')\n        } else {\n          changeModelSrc.value = '../../static/changeModel.png'\n          modelStore.setModel('常规模式')\n          await wsStore.sendMessage({\n            system_model: currentModel.value,\n            input_type: 3,\n            text: '',\n          })\n          console.log('模式切换消息发送成功')\n        }\n\n        uni.showToast({\n          title: '模式切换成功',\n          icon: 'success',\n          duration: 1500,\n        })\n      } catch (error) {\n        console.error('WebSocket操作失败:', error)\n        uni.showToast({\n          title: '切换失败，请稍后再试',\n          icon: 'none',\n        })\n        // 如果失败，回滚UI状态\n        currentModel.value =\n          currentModel.value === '常规模式' ? '金种子杯模式' : '常规模式'\n        bgSrc.value = systemModelConfig[currentModel.value].pic_url\n        if (currentModel.value === '金种子杯模式') {\n          modelStore.setModel('金种子杯模式')\n        } else {\n          modelStore.setModel('常规模式')\n        }\n      }\n    } catch (error) {\n      console.error('切换模式过程中出错:', error)\n      uni.showToast({\n        title: '切换失败，请稍后再试',\n        icon: 'none',\n      })\n    } finally {\n      isTogglingModel.value = false\n    }\n  }\n\n  const handleSubmit = (message) => {\n    console.log(message, 'handleSubmit')\n  }\n\n  // 从服务器获取系统配置\n  const fetchSystemConfig = async () => {\n    try {\n      const res = await request(`${baseUrl}/system/get_system_setting`, 'GET')\n      console.log('获取系统配置', res)\n\n      // 更新shine_point配置\n      if (res.data && res.data.shine_point) {\n        Object.assign(shinePointConfig, res.data.shine_point)\n      }\n\n      // 更新system_model配置\n      if (res.data && res.data.system_model) {\n        // 更新常规模式配置\n        if (res.data.system_model['常规模式']) {\n          systemModelConfig['常规模式'] = res.data.system_model['常规模式']\n        }\n\n        // 更新金种子杯模式配置\n        if (res.data.system_model['金种子杯模式']) {\n          systemModelConfig['金种子杯模式'] =\n            res.data.system_model['金种子杯模式']\n          // 检查金种子杯模式是否可用\n          isGoldModeAvailable.value =\n            !!res.data.system_model['金种子杯模式'].valid\n        }\n\n        // 设置当前背景图\n        bgSrc.value = systemModelConfig[currentModel.value].pic_url\n      }\n    } catch (error) {\n      console.error('获取系统配置失败:', error)\n    }\n  }\n\n  onShow(async () => {\n    sptime.value = new Date().getTime()\n    dmReport(\n      'pv',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            page: 'homePage',\n          },\n        ],\n      }\n    )\n    try {\n      // 页面显示时可以进行一些操作\n      console.log('主页面显示')\n      //从后端获取是否有广告\n      const adRes = await request(\n        `${baseUrl}/system/get_valid_notify_pic`,\n        'GET'\n      )\n      console.log('获取广告', adRes)\n      if (adRes.code == 0 && adRes.data.length > 0) {\n        adList.value = adRes.data\n        showAd.value = true\n      }\n      // 获取当前主题\n      const currentSubject = await request(`${baseUrl}/user/user_info`, 'GET')\n      console.log('获取当前主题', currentSubject.data.topic)\n      // 更新主题\n      sbStore.setSubject(currentSubject.data.topic)\n      // 获取系统配置\n      await fetchSystemConfig()\n\n      // 设置当前模式\n      if (isRadio.value) {\n        // 如果是电台模式，直接返回\n        console.log('电台模式下执行的onShow逻辑', isRadio.value)\n        console.log('背景音乐是否正在播放', audioPlayerStore.bgIsPlaying)\n        // audioPlayerStore.stopAllAudio()\n        // 尝试连接WebSocket\n        if (!wsStore.isConnected) {\n          await wsStore.connect()\n          console.log('socket连接成功')\n\n          // 发送连接成功的消息 - 仅在页面首次加载时\n          await wsStore.sendMessage({\n            system_model: currentModel.value,\n            input_type: 3,\n            text: '',\n          })\n        }\n      } else {\n        // 尝试连接WebSocket\n        if (!wsStore.isConnected) {\n          await wsStore.connect()\n          console.log('socket连接成功')\n\n          // 发送连接成功的消息 - 仅在页面首次加载时\n          await wsStore.sendMessage({\n            system_model: currentModel.value,\n            input_type: 3,\n            text: '',\n          })\n          console.log('发送input_type=3的初始消息成功')\n        }\n      }\n    } catch (error) {\n      console.error('页面显示时发生错误:', error)\n    }\n  })\n\n  onHide(async () => {\n    // 页面隐藏时关闭WebSocket连接\n    const endTime = new Date().getTime()\n    const duration = endTime - sptime.value\n    dmReport(\n      'stay',\n      {},\n      {\n        page: 'homePage',\n        sptime: duration,\n      }\n    )\n    console.log('onHide主页面隐藏')\n\n    // 上报当前音频播放状态\n    audioPlayerStore.reportCurrentProgress()\n    console.log('音频播放状态已上报')\n\n    // 停止并清空所有音频队列\n    if (isRadio.value) {\n      // 如果是电台模式，就不停止背景音乐\n      console.log('电台模式下不停止背景音乐onHide', isRadio.value)\n      audioPlayerStore.stopTtsAudio()\n    } else {\n      // audioPlayerStore.stopAllAudio()\n      audioPlayerStore.stopTtsAudio()\n      barrageStore.clearMessages()\n      console.log('停止并清空所有音频队列', '非电台模式下停止背景音乐')\n      // 清空消息列表\n      console.log('清空消息列表')\n    }\n\n    // 关闭WebSocket连接\n    await wsStore.close()\n    console.log('Hidesocket连接关闭')\n  })\n  onShareAppMessage(() => {\n    console.log('onShareAppMessage......')\n    return {\n      title: `不芒一点，陪你世界加一点`,\n      imageUrl: '../../static/share.png',\n      path: '/pages/index/index',\n    }\n  })\n  onShareTimeline(() => {\n    console.log('onShareTimeline......')\n    return {\n      title: `不芒一点，陪你世界加一点`,\n    }\n  })\n</script>\n\n<style lang=\"scss\" scoped>\n  @import './index.scss';\n  .popupshow {\n    position: absolute;\n    z-index: 9999;\n  }\n</style>\n","import MiniProgramPage from '/Users/lynnyang/work/project/xjlab/HBuilderProjects/bumangyidian/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","useToggleModelStore","uni","watch","usePlaceholderStore","subjectShowStore","computed","useIsRadioStore","onShow","nextTick","onHide","useSubjectStore","useWebSocketStore","useAudioPlayerStore","useBarrageStore","useModelStore","reactive","dmReport","request","baseUrl","onShareAppMessage","onShareTimeline"],"mappings":"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"}