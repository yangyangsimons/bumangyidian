{"version":3,"file":"chat.js","sources":["../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli-vite/__vite-browser-external:events","components/chat/chat.vue","/Users/lynnyang/work/project/xjlab/HBuilderProjects/bumangyidian/components/chat/chat.vue?type=component"],"sourcesContent":["export default new Proxy({}, {\n  get(_, key) {\n    throw new Error(`Module \"events\" has been externalized for browser compatibility. Cannot access \"events.${key}\" in client code.  See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n  }\n})","<template>\n  <view class=\"chat-container\">\n    <view\n      class=\"input-container-voice\"\n      v-if=\"showText && !isRadio\"\n      :style=\"colorSystem\"\n    >\n      <image\n        class=\"input-icon\"\n        src=\"../../static/keyboard.png\"\n        @click=\"changeInputTypeToText\"\n      />\n      <button\n        class=\"input-field\"\n        type=\"text\"\n        @longpress=\"startRecord\"\n        @touchend=\"endRecord\"\n        @touchmove=\"onTouchMove\"\n        @touchstart=\"onTouchStart\"\n      >\n        按住说话\n      </button>\n    </view>\n    <view\n      class=\"input-container-text\"\n      v-if=\"!showText && !isRadio\"\n      :style=\"colorSystem\"\n    >\n      <image\n        class=\"input-voice-icon\"\n        src=\"../../static/voice.png\"\n        mode=\"scaleToFill\"\n        @click=\"changeInputTypeToVoice\"\n      />\n      <input\n        type=\"text\"\n        :placeholder=\"placeholderStore.currentPlaceholder\"\n        p\n        :placeholder-style=\"inputColor\"\n        class=\"input-field-text\"\n        @input=\"onKeyInput\"\n        :value=\"inputValue\"\n        confirm-type=\"send\"\n        @confirm=\"handleSubmit\"\n        @focus=\"onInputFocus\"\n        @blur=\"onInputBlur\"\n        adjust-position=\"true\"\n      />\n      <view class=\"send\" @tap.stop=\"handleSubmit\" v-if=\"sendAble\">\n        <image\n          class=\"send-icon send-fly\"\n          src=\"../../static/send-icon.png\"\n          mode=\"scaleToFill\"\n        />\n      </view>\n      <view class=\"send wrap\" v-if=\"!sendAble\" @tap.stop=\"handleStopGenerate\">\n        <view class=\"round\"></view>\n        <view class=\"round\"></view>\n        <view class=\"round\"></view>\n        <view class=\"round\"></view>\n        <view class=\"round\"></view>\n        <view class=\"round\"></view>\n        <view class=\"round\"></view>\n        <view class=\"round\"></view>\n      </view>\n    </view>\n    <view\n      class=\"input-container-text mainbox\"\n      v-if=\"isRadio\"\n      :style=\"colorSystem\"\n    >\n      <!-- <view class=\"moving-element\"></view> -->\n      <image\n        class=\"input-voice-icon\"\n        src=\"../../static/radio.png\"\n        mode=\"scaleToFill\"\n        @longpress=\"backToQA\"\n      />\n      <input\n        type=\"text\"\n        :placeholder=\"radioText\"\n        :placeholder-style=\"inputColor\"\n        class=\"input-field-text\"\n        adjust-position=\"true\"\n        :value=\"radioInputMessage\"\n        @focus=\"radioInputFocus\"\n        @input=\"onRadioKeyInput\"\n        @blur=\"onRadioInputBlur\"\n      />\n      <view class=\"send\" @tap.stop=\"stopRadio\" v-if=\"radioPlay && !radioInput\">\n        <image\n          class=\"send-icon\"\n          src=\"../../static/play.png\"\n          mode=\"scaleToFill\"\n        />\n      </view>\n      <view\n        class=\"send\"\n        v-if=\"!radioPlay && !radioInput\"\n        @tap.stop=\"resumeRadio\"\n      >\n        <image\n          class=\"send-icon\"\n          src=\"../../static/stop.png\"\n          mode=\"scaleToFill\"\n        />\n      </view>\n      <view class=\"send\" @click=\"handleRadioInputSubmit\" v-if=\"radioInput\">\n        <image\n          class=\"send-icon send-fly\"\n          src=\"../../static/send-icon.png\"\n          mode=\"scaleToFill\"\n        />\n      </view>\n    </view>\n    <image\n      class=\"voice-icon\"\n      :src=\"voiceIconSrc\"\n      mode=\"scaleToFill\"\n      @click=\"toggleUserPopup\"\n    />\n    <user-popup ref=\"userPopupRef\"></user-popup>\n  </view>\n</template>\n\n<script setup>\n  import { onLoad, onUnload, onShow, onHide } from '@dcloudio/uni-app'\n  import { ref, computed } from 'vue'\n  import { useRecordingStore } from '@/stores/recording'\n  import { useBarrageStore } from '@/stores/barrage'\n  import { useWebSocketStore } from '@/stores/websocket'\n  import { useModelStore } from '@/stores/model'\n  import { useSubjectStore } from '../../stores/subject'\n  import { baseUrl } from '@/utils/config'\n  import { useSendStore } from '../../stores/send'\n  import { useIsRadioStore } from '../../stores/isRadio'\n  import { useAudioPlayerStore } from '../../stores/audioPlayer'\n  import { subjectShowStore } from '../../stores/subjectShow'\n  import { usePlaceholderStore } from '../../stores/placeholderStore'\n  import request from '@/utils/request'\n  import { dmReport } from '../../utils/report'\n  import { on } from 'events'\n\n  //电台模式下输入框监控\n  const radioInput = ref(false)\n  const radioInputMessage = ref('')\n  // 获取placeholder store\n  const placeholderStore = usePlaceholderStore()\n  const subjectShow = subjectShowStore()\n  const radioText = ref('长按左侧图标退出电台')\n  const audioPlayerStore = useAudioPlayerStore()\n  const sbStore = useSubjectStore()\n  const wsStore = useWebSocketStore()\n  const sendStore = useSendStore()\n  const isRadioStore = useIsRadioStore()\n  const radioPlay = ref(true)\n  const colorSystem = ref('background: rgba(0, 0, 0, 0.2);')\n  const inputColor = ref('color:rgba(255, 255, 255, 1)')\n  // 设置能否发送消息\n  const sendAble = computed(() => {\n    return sendStore.send\n  })\n  const isRadio = computed(() => {\n    return isRadioStore.isRadio\n  })\n\n  const voiceIconSrc = computed(() => {\n    return isRadio.value\n      ? '../../static/voice-icon-disable.png'\n      : '../../static/voice-icon.png'\n  })\n  // const isRadio = ref(true)\n  // 初始化聊天模式\n  const modelStore = useModelStore()\n  const message = ref('')\n  const inputValue = ref('')\n  const barrageStore = useBarrageStore()\n  const recordingStore = useRecordingStore()\n  const uploadMessage = ref({})\n  const keyboardHeight = ref(32) // 默认底部距离\n  const placeholder = ref('')\n  const emit = defineEmits(['submit'])\n  const showText = ref(false)\n\n  var plugin = requirePlugin('WechatSI')\n  let manager = plugin.getRecordRecognitionManager()\n  const userPopupRef = ref(null)\n  // 录音相关状态\n  const touchStartY = ref(0)\n  const shouldCancel = ref(false)\n  const cancelThreshold = 50 // 上滑取消的阈值（单位：px）\n\n  // 触摸开始时记录位置\n  const onTouchStart = (event) => {\n    touchStartY.value = event.touches[0].clientY\n  }\n\n  // 触摸移动时计算距离\n  const onTouchMove = (event) => {\n    if (!recordingStore.isRecording) return\n\n    const currentY = event.touches[0].clientY\n    const moveDistance = touchStartY.value - currentY\n\n    // 当上滑距离超过阈值时，标记为取消状态\n    if (moveDistance > cancelThreshold) {\n      shouldCancel.value = true\n    } else {\n      shouldCancel.value = false\n    }\n  }\n\n  //控制用户信息弹窗\n\n  const toggleUserPopup = () => {\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '点击用户信息弹窗',\n          },\n        ],\n      }\n    )\n    if (isRadio.value) {\n      uni.showToast({\n        title: '电台模式下无法查看用户信息',\n        icon: 'none',\n        duration: 1500,\n      })\n      return\n    }\n    userPopupRef.value.open()\n  }\n\n  // 监听键盘高度变化\n  const onInputFocus = (e) => {\n    console.log('输入框获取焦点', e)\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '点击文字输入框',\n          },\n        ],\n      }\n    )\n    // 判断是否已经登录过了，token是否存在\n    const token = uni.getStorageSync('token')\n    if (!token) {\n      uni.showModal({\n        title: '',\n        content: '登录后体验完整功能',\n        success: async (res) => {\n          if (res.confirm) {\n            console.log('用户点击确定')\n            await wsStore.close()\n            audioPlayerStore.stopAllAudio()\n            barrageStore.clearMessages()\n            console.log('用户点击确定')\n            // 1秒钟之后跳转登录\n            setTimeout(() => {\n              uni.reLaunch({\n                url: '/pages/login/login',\n              })\n            }, 1000)\n          } else if (res.cancel) {\n            console.log('用户点击取消')\n          }\n        },\n      })\n      return\n    }\n    // 获取键盘高度\n    uni.onKeyboardHeightChange((res) => {\n      if (res.height > 0) {\n        keyboardHeight.value = res.height + 32 // 32rpx 是原本的底部距离\n      } else {\n        keyboardHeight.value = 32\n      }\n    })\n  }\n\n  const onInputBlur = () => {\n    keyboardHeight.value = 32\n  }\n\n  // 点击切换输入框类型\n  const changeInputTypeToText = () => {\n    // 这里可以添加逻辑来切换输入类型\n    console.log('切换到文字模式')\n    showText.value = false\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '切换到文字输入',\n          },\n        ],\n      }\n    )\n  }\n  const changeInputTypeToVoice = () => {\n    console.log('切换到语音模式')\n    showText.value = true\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '切换到语音输入',\n          },\n        ],\n      }\n    )\n  }\n\n  // 录音开始\n  const startRecord = () => {\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '按住说话',\n          },\n        ],\n      }\n    )\n    audioPlayerStore.setTtsVolume(0)\n    console.log('开始录音')\n    recordingStore.startRecording()\n    console.log(recordingStore.isRecording)\n    shouldCancel.value = false\n    manager.start({\n      lang: 'zh_CN',\n    })\n  }\n\n  // 当用户松开手指时，结束录音并开始识别\n  const endRecord = () => {\n    console.log('结束录音')\n    audioPlayerStore.setTtsVolume(1)\n    recordingStore.stopRecording()\n    console.log(recordingStore.isRecording)\n    manager.stop()\n    // 检查是否应该取消发送\n    if (shouldCancel.value) {\n      console.log('取消发送录音')\n      shouldCancel.value = false\n      uni.showToast({\n        title: '已取消发送',\n        icon: 'none',\n        duration: 1500,\n      })\n      return\n    }\n\n    manager.onStop = (res) => {\n      console.log('识别结束：', res.result)\n      message.value = res.result\n      // 发送识别结果到服务器\n      // sendStore.setSend(false) // 设置不能发送消息\n\n      handleUploadMessage(message.value)\n      // barrageStore.addMessage({\n      //   type: 'user',\n      //   content: message.value,\n      // })\n    }\n    manager.onError = (res) => {\n      console.error('识别错误：', res)\n    }\n  }\n\n  // 处理输入框的输入事件\n  const onKeyInput = (event) => {\n    // console.log('输入内容：', event.detail.value)\n    inputValue.value = event.detail.value\n  }\n\n  // 提交消息\n  const handleSubmit = () => {\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '点击发送按钮',\n          },\n        ],\n      }\n    )\n    if (!sendAble.value) {\n      console.log('不能发送消息')\n      uni.showLoading({\n        title: '加载中',\n        mask: true,\n        duration: 1000,\n      })\n      return\n    }\n    if (!inputValue.value.trim()) return // 避免发送空消息\n\n    // 保存当前输入值\n    const currentInput = inputValue.value\n\n    // 清空输入框\n    inputValue.value = ''\n\n    // 主动使输入框失去焦点，收起键盘\n    uni.hideKeyboard()\n    sendStore.setSend(false) // 设置能发送消息\n    // 使用保存的输入值处理消息\n    setTimeout(() => {\n      handleUploadMessage(currentInput)\n    }, 50) // 轻微延迟确保UI更新\n  }\n\n  // 处理停止生成消息\n  const handleStopGenerate = () => {\n    console.log('停止生成消息')\n    // 这里可以添加停止生成消息的逻辑\n    wsStore.sendMessage({\n      input_type: 4,\n      text: 'stop',\n      system_model: modelStore.model,\n    })\n  }\n  //上传的消息处理\n  const handleUploadMessage = async (userMessage) => {\n    if (!userMessage || !userMessage.trim()) return\n    console.log('上传消息了sendAble:', sendAble.value)\n\n    console.log('上传的消息:', userMessage)\n    // 这里可以添加处理上传消息的逻辑\n    const barrageMessages = barrageStore.messages\n    if (\n      barrageMessages.length >= 1 &&\n      barrageMessages[barrageMessages.length - 1].type === 'subject'\n    ) {\n      console.log('上一个对话是主题选择')\n      uploadMessage.system_model = useModelStore().model\n      uploadMessage.input_type = 2\n      uploadMessage.text = userMessage\n      //延迟两秒钟之后查询用户信息\n      setTimeout(async () => {\n        const currentSubject = await request(`${baseUrl}/user/user_info`, 'GET')\n        console.log('获取当前主题', currentSubject.data.topic)\n        // 更新主题\n        sbStore.setSubject(currentSubject.data.topic)\n      }, 2000)\n    } else {\n      uploadMessage.system_model = useModelStore().model\n      uploadMessage.input_type = 1\n      uploadMessage.text = userMessage\n    }\n\n    wsStore.sendMessage(uploadMessage)\n    barrageStore.addMessage({\n      type: 'user',\n      content: userMessage, // 使用传入的userMessage而不是inputValue\n    })\n    audioPlayerStore.stopTtsAudio()\n  }\n  // 停止电台\n  const stopRadio = () => {\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '暂停电台播放',\n          },\n        ],\n      }\n    )\n    radioPlay.value = false\n    console.log('停止电台')\n    audioPlayerStore.pauseBgMusic()\n    audioPlayerStore.pauseTtsAudio()\n  }\n  // 恢复电台\n  const resumeRadio = () => {\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '恢复电台播放',\n          },\n        ],\n      }\n    )\n    radioPlay.value = true\n    console.log('恢复电台')\n    try {\n      // audioPlayerStore.resumeBgMusic()\n      // audioPlayerStore.playBgMusic()\n      // audioPlayerStore.playTtsAudio()\n      audioPlayerStore.resumeTtsAudio()\n      audioPlayerStore.resumeBgMusic()\n      audioPlayerStore.setBgLoop(false)\n    } catch (e) {\n      console.log('恢复电台失败', e)\n      audioPlayerStore.resumeTtsAudio()\n      // audioPlayerStore.resumeBgMusic()\n    }\n  }\n\n  onShow(() => {\n    // 页面显示时可以进行一些操作\n\n    if (isRadioStore.isRadio) {\n      voiceIconSrc.value = '../../static/voice-icon-disable.png'\n    }\n    console.log('聊天组件显示')\n    console.log('聊天组件显示isRadio', isRadioStore.isRadio)\n    //随机placeholder\n    if (modelStore.model === '金种子杯模式') {\n      placeholderStore.setRandomSpecialPlaceholder()\n    } else {\n      placeholderStore.setRandomNormalPlaceholder()\n    }\n  })\n\n  onLoad(() => {\n    // 这里可以进行一些初始化操作\n    console.log('聊天组件加载完成')\n  })\n\n  onUnload(() => {\n    // 移除键盘高度监听\n    uni.offKeyboardHeightChange()\n  })\n\n  const radioInputtap = () => {\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '电台模式点击输入框',\n          },\n        ],\n      }\n    )\n    radioText.value = '长按左侧图标退出电台'\n    setTimeout(() => {\n      radioText.value = '电台播出中,长按左侧图标退出电台'\n    }, 2000)\n  }\n  const backToQA = () => {\n    console.log('返回问答')\n    //上报退出电台\n    dmReport(\n      'click',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            element_id: 'content',\n            element_content: '长按退出电台',\n          },\n        ],\n      }\n    )\n    audioPlayerStore.stopAllAudio()\n    modelStore.setModel('QA模式')\n    isRadioStore.setIsRadio(false)\n    subjectShow.setSubjectShow(true)\n    sendStore.setSend(true)\n  }\n  // 电台模式下点击输入框允许发送\n  const onRadioKeyInput = (e) => {\n    console.log('电台模式下点击输入框允许发送')\n    console.log('电台模式下点击输入框允许发送', e)\n    radioInputMessage.value = e.detail.value\n  }\n  const radioInputFocus = (e) => {\n    console.log('电台模式下点击输入框允许发送')\n    console.log('电台模式下点击输入框允许发送', e)\n    radioInput.value = true\n  }\n  const handleRadioInputSubmit = async () => {\n    console.log('电台模式下点击发送按钮')\n    if (!radioInputMessage.value.trim()) return // 避免发送空消息\n    // 保存当前输入值\n    const currentInput = radioInputMessage.value\n\n    // 清空输入框\n    radioInputMessage.value = ''\n\n    //上传到服务器\n    const uploadMessage = await request(\n      `${baseUrl}/content/leave_message`,\n      'POST',\n      {\n        content: currentInput,\n      }\n    )\n    console.log('上传的消息:', uploadMessage)\n    if (uploadMessage.code === 0) {\n      uni.showToast({\n        title: '留言已收到',\n        icon: 'success',\n        duration: 1000,\n      })\n      barrageStore.addMessage({\n        type: 'leaveMessage',\n        content: currentInput,\n      })\n    } else {\n      uni.showToast({\n        title: '发送失败',\n        icon: 'none',\n        duration: 500,\n      })\n    }\n    //\n    radioInput.value = false\n  }\n  const onRadioInputBlur = () => {\n    radioInput.value = false\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  @import './index.scss';\n</style>\n","import Component from '/Users/lynnyang/work/project/xjlab/HBuilderProjects/bumangyidian/components/chat/chat.vue'\nwx.createComponent(Component)"],"names":["ref","usePlaceholderStore","subjectShowStore","useAudioPlayerStore","useSubjectStore","useWebSocketStore","useSendStore","useIsRadioStore","computed","useModelStore","useBarrageStore","useRecordingStore","dmReport","uni","request","baseUrl","onShow","onLoad","onUnload","uploadMessage"],"mappings":"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"}