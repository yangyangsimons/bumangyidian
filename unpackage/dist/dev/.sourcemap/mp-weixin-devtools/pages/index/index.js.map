{"version":3,"names":["barrage","chat","guide","recordAnimation","scrollSpeed","scrollDelay","showAd","common_vendor","ref","adList","showDots","toggleModelStore","stores_toggleModelStore","useToggleModelStore","sptime","current","handleAdClose","value","adNav","adUrl","index","__f__","url","concat","navigateTo","handleAdChange","e","detail","watch","shouldToggleModel","newValue","toggleSystemModel","resetModelChangeFlag","placeholderStore","stores_placeholderStore","usePlaceholderStore","systemColor","subjectshowStore","stores_subjectShow","subjectShowStore","subjectShow","computed","isRadioStore","isRadio","stores_isRadio","useIsRadioStore","changeModelSrc","scrollPosition","needScroll","scrollTimer","textWidth","onShow","nextTick$1","initScroll","onHide","stopScroll","query","createSelectorQuery","select","boundingClientRect","textRect","containerRect","width","startScroll","exec","setInterval","clearInterval","bgSrc","subejctText","sbStore","subject","stores_subject","useSubjectStore","wsStore","stores_websocket","useWebSocketStore","audioPlayerStore","stores_audioPlayer","useAudioPlayerStore","barrageStore","stores_barrage","useBarrageStore","modelStore","stores_model","useModelStore","currentModel","isGoldModeAvailable","systemModelConfig","reactive","常规模式","pic_id","pic_url","金种子杯模式","valid","shinePointConfig","text","x_ratio","y_ratio","shinePointVisible","isTogglingModel","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","wrap","_callee$","_context","prev","next","showToast","title","icon","duration","abrupt","reportCurrentProgress","stopAllAudio","clearMessages","utils_report","dmReport","page","contents","element_id","element_content","setModel","setRandomSpecialPlaceholder","setIsRadio","setRandomNormalPlaceholder","close","Promise","resolve","setTimeout","connect","sendMessage","system_model","input_type","t0","t1","finish","stop","apply","arguments","handleSubmit","message","fetchSystemConfig","_ref2","_callee2","res","_callee2$","_context2","utils_request","request","utils_config","baseUrl","sent","data","shine_point","Object","assign","_callee3","adRes","currentSubject","_callee3$","_context3","Date","getTime","code","length","topic","setSubject","bgIsPlaying","isConnected","_callee4","endTime","_callee4$","_context4","stopTtsAudio","onShareAppMessage","imageUrl","path","onShareTimeline","wx","createPage","MiniProgramPage"],"sources":["index.vue","index.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"cover\">\n    <image class=\"global-title\" src=\"../../static/global-title.png\"></image>\n    <!-- 当金种子杯模式有效时显示切换按钮 -->\n    <button\n      v-if=\"isGoldModeAvailable\"\n      class=\"changeModel\"\n      @click=\"toggleSystemModel\"\n    >\n      <view class=\"botton-title\">\n        <image\n          :src=\"changeModelSrc\"\n          mode=\"scaleToFill\"\n          class=\"change-model-pic\"\n        />\n        <text class=\"model\">{{\n          currentModel === '常规模式' ? '「不芒」学长' : '「树洞」模式'\n        }}</text>\n      </view>\n\n      <text class=\"talk\">{{\n        currentModel === '常规模式' ? '创新创业专家解读' : '陪你早安到晚安'\n      }}</text>\n    </button>\n\n    <image :src=\"bgSrc\" class=\"cover-image\" mode=\"aspectFill\" />\n    <!-- 根据shine_point的valid显示亮点 -->\n    <view\n      v-if=\"shinePointVisible\"\n      class=\"shine-point\"\n      :style=\"{\n        left: `${shinePointConfig.x_ratio * 100}%`,\n        top: `${shinePointConfig.y_ratio * 100}%`,\n      }\"\n    >\n      <image\n        class=\"shining-image\"\n        src=\"../../static/shining-point.png\"\n        mode=\"scaleToFill\"\n      />\n      <text class=\"shining-text\">{{ shinePointConfig.text }} </text>\n    </view>\n    <record-animation />\n    <view\n      class=\"subject-container\"\n      v-if=\"currentModel != '金种子杯模式' && subjectShow\"\n      :style=\"{ color: systemColor }\"\n    >\n      <view class=\"title\">今日话题</view>\n      <view class=\"subject-scroll-view\">\n        <view\n          class=\"marquee-content\"\n          :style=\"{ transform: `translateX(${-scrollPosition}px)` }\"\n        >\n          <view class=\"subject\">{{ subejctText }}</view>\n          <view class=\"space\" v-if=\"needScroll\"></view>\n          <view class=\"subject\" v-if=\"needScroll\">{{ subejctText }}</view>\n        </view>\n      </view>\n    </view>\n    <view class=\"barrage-container\">\n      <barrage />\n    </view>\n    <chat @submit=\"handleSubmit\" />\n    <view class=\"ad-container\" v-if=\"showAd\">\n      <view class=\"img-container\">\n        <swiper\n          @click=\"adNav(index)\"\n          class=\"ad-swiper\"\n          :indicator-dots=\"showDots\"\n          :autoplay=\"autoplay\"\n          :interval=\"interval\"\n          :duration=\"duration\"\n          :circular=\"circular\"\n          @change=\"handleAdChange\"\n        >\n          <swiper-item\n            v-for=\"(imgObj, index) in adList\"\n            :key=\"index\"\n            class=\"swiper-item\"\n          >\n            <image\n              :src=\"imgObj.pic_url\"\n              class=\"ad-image\"\n              mode=\"aspectFill\"\n              @tap=\"handleAdClick(imgObj.activity_url)\"\n            />\n          </swiper-item>\n        </swiper>\n\n        <!-- 自定义指示点 -->\n        <view class=\"custom-indicators\">\n          <view\n            v-for=\"(_, index) in adList\"\n            :key=\"index\"\n            class=\"indicator-dot\"\n            :class=\"{ active: current === index }\"\n          ></view>\n        </view>\n      </view>\n      <img class=\"close\" src=\"../../static/close.png\" @tap=\"handleAdClose\" />\n    </view>\n    <guide />\n  </view>\n</template>\n\n<script setup>\n  import { ref, reactive, computed, nextTick, watch } from 'vue'\n  import { wsUrl, baseUrl } from '../../utils/config'\n  import {\n    onLoad,\n    onUnload,\n    onShow,\n    onHide,\n    onShareAppMessage,\n    onShareTimeline,\n  } from '@dcloudio/uni-app'\n  import request from '@/utils/request'\n  import barrage from '@/components/barrage/barrage.vue'\n  import chat from '@/components/chat/chat.vue'\n  import guide from '@/components/guide/guide.vue'\n  import { useWebSocketStore } from '@/stores/websocket'\n  import { useBarrageStore } from '../../stores/barrage'\n  import { useModelStore } from '../../stores/model'\n  import { dmReport } from '../../utils/report'\n  // 导入音频播放器状态管理\n  import { useAudioPlayerStore } from '@/stores/audioPlayer'\n  import recordAnimation from '../../components/record-animation/record-animation.vue'\n  //导入主题管理\n  import { useSubjectStore } from '../../stores/subject'\n  import { useIsRadioStore } from '../../stores/isRadio'\n  import { subjectShowStore } from '../../stores/subjectShow'\n  import { usePlaceholderStore } from '../../stores/placeholderStore'\n  import { useToggleModelStore } from '../../stores/toggleModelStore'\n  const showAd = ref(false)\n  const adList = ref([])\n  const showDots = ref(false)\n  const toggleModelStore = useToggleModelStore()\n  const sptime = ref(0)\n  const current = ref(0)\n  const handleAdClose = () => {\n    showAd.value = false\n  }\n  const adNav = (adUrl) => {\n    // 根据类型确定跳转的URL\n    console.log('广告链接......:', adUrl)\n    const url = `/pages/ad/ad?address=${adUrl}`\n\n    // 跳转到协议展示页面\n    uni.navigateTo({ url })\n  }\n  const handleAdChange = (e) => {\n    current.value = e.detail.current\n  }\n\n  // 监听 store 中的状态变化\n  watch(\n    () => toggleModelStore.shouldToggleModel,\n    (newValue) => {\n      if (newValue) {\n        // 如果状态为 true，则执行 toggleModelchange 函数\n        toggleSystemModel()\n        // 执行完后重置状态\n        toggleModelStore.resetModelChangeFlag()\n      }\n    }\n  )\n  const placeholderStore = usePlaceholderStore()\n\n  //主题管理\n  const systemColor = ref('rgba(26, 28, 30, 1);')\n  const subjectshowStore = subjectShowStore()\n  const subjectShow = computed(() => {\n    return isRadioStore.isRadio || subjectshowStore.subjectShow ? true : false\n  })\n  //导入电台模式状态\n  const isRadioStore = useIsRadioStore()\n  const isRadio = computed(() => isRadioStore.isRadio)\n  const changeModelSrc = ref('../../static/changeModel.png')\n\n  // 响应式数据\n  const scrollPosition = ref(0)\n  const needScroll = ref(false)\n  let scrollTimer = null\n  let textWidth = 0\n  const scrollSpeed = 1 // 每次移动的像素\n  const scrollDelay = 10 // 滚动间隔（毫秒）\n  // 生命周期钩子\n  onShow(() => {\n    nextTick(() => {\n      initScroll()\n    })\n  })\n\n  onHide(() => {\n    stopScroll()\n  })\n\n  // 方法\n  const initScroll = () => {\n    const query = uni.createSelectorQuery()\n    query\n      .select('.subject')\n      .boundingClientRect((textRect) => {\n        query\n          .select('.subject-scroll-view')\n          .boundingClientRect((containerRect) => {\n            if (textRect && containerRect) {\n              textWidth = textRect.width\n\n              // 如果文本宽度大于容器宽度，需要滚动\n              if (textRect.width > containerRect.width) {\n                needScroll.value = true\n                startScroll()\n              }\n            }\n          })\n          .exec()\n      })\n      .exec()\n  }\n\n  const startScroll = () => {\n    stopScroll()\n\n    scrollTimer = setInterval(() => {\n      scrollPosition.value += scrollSpeed\n\n      // 当滚动到第一个文本的末尾时，重置位置\n      if (scrollPosition.value >= textWidth + 60) {\n        scrollPosition.value = 0\n      }\n    }, scrollDelay)\n  }\n\n  const stopScroll = () => {\n    if (scrollTimer) {\n      clearInterval(scrollTimer)\n      scrollTimer = null\n    }\n  }\n\n  // 切换非电台模式\n  const toggleRadioModel = () => {\n    isRadioStore.setIsRadio(!isRadio.value)\n    console.log('切换电台模式', isRadio.value)\n  }\n\n  // 在主题更新时（如获取新主题后）\n  // nextTick(startAutoScroll)\n\n  const bgSrc = ref('../../static/index-bg.png')\n  const messages = ref([])\n  const subejctText = computed(() => sbStore.subject)\n  //初始化subject管理\n  const sbStore = useSubjectStore()\n  subejctText.value = sbStore.subject\n\n  const wsStore = useWebSocketStore()\n  // 初始化音频播放器状态管理\n  const audioPlayerStore = useAudioPlayerStore()\n  // 初始化弹幕状态管理\n  const barrageStore = useBarrageStore()\n\n  // 初始化模型状态管理\n  const modelStore = useModelStore()\n  // 添加状态管理\n  const currentModel = ref('常规模式')\n  const isGoldModeAvailable = ref(false)\n  const systemModelConfig = reactive({\n    常规模式: {\n      pic_id: 0,\n      pic_url: '',\n    },\n    金种子杯模式: {\n      pic_id: 0,\n      pic_url: '',\n      valid: false,\n    },\n  })\n  const shinePointConfig = reactive({\n    text: '',\n    valid: 0,\n    x_ratio: 0,\n    y_ratio: 0,\n  })\n\n  // 计算属性：是否显示亮点\n  const shinePointVisible = computed(() => {\n    if (typeof shinePointConfig.valid === 'boolean') {\n      return shinePointConfig.valid\n    } else {\n      return !!shinePointConfig.valid // 将数字转为布尔值\n    }\n  })\n\n  // 切换系统模式 - 只更新UI，不发送WebSocket消息\n  // 添加防抖变量\n  const isTogglingModel = ref(false)\n\n  // 切换系统模式 - 只更新UI，不发送WebSocket消息\n  const toggleSystemModel = async () => {\n    uni.showToast({\n      title: '切换中...',\n      icon: 'loading',\n      duration: 2500,\n    })\n    // 防止重复点击\n    if (isTogglingModel.value) {\n      console.log('切换模式操作进行中，请勿重复点击')\n      uni.showToast({\n        title: '操作进行中，请稍候',\n        icon: 'none',\n      })\n      return\n    }\n    try {\n      isTogglingModel.value = true\n\n      // 更新当前模式\n      currentModel.value =\n        currentModel.value === '常规模式' ? '金种子杯模式' : '常规模式'\n      // 更新背景图\n      bgSrc.value = systemModelConfig[currentModel.value].pic_url\n\n      console.log(`切换到${currentModel.value}`)\n      audioPlayerStore.reportCurrentProgress()\n      audioPlayerStore.stopAllAudio()\n      // audioPlayerStore.resetBgMusic()\n      // audioPlayerStore.resetTtsAudio()\n      console.log('停止并清空所有音频队列')\n      barrageStore.clearMessages()\n      console.log('清空消息列表')\n      // 更新状态管理\n      if (currentModel.value === '金种子杯模式') {\n        dmReport(\n          'click',\n          {},\n          {\n            page: 'homePage',\n            contents: [\n              {\n                element_id: 'content',\n                element_content: '点击切换到金种子',\n              },\n            ],\n          }\n        )\n        //更新随机的placeholder\n\n        modelStore.setModel('金种子杯模式')\n        placeholderStore.setRandomSpecialPlaceholder()\n        isRadioStore.setIsRadio(false)\n      } else {\n        dmReport(\n          'click',\n          {},\n          {\n            page: 'homePage',\n            contents: [\n              {\n                element_id: 'content',\n                element_content: '点击切换到常规模式',\n              },\n            ],\n          }\n        )\n        modelStore.setModel('常规模式')\n        placeholderStore.setRandomNormalPlaceholder()\n      }\n      // 上报当前音频播放状态,停止所有音频并清空所有音频队列\n      // 关闭连接\n      await wsStore.close()\n      console.log('模式切换WebSocket连接已关闭')\n\n      // 等待一段时间，确保连接完全关闭\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n\n      try {\n        // 重新连接\n        await wsStore.connect()\n        console.log('切换模式的socket重新连接成功')\n\n        // 等待连接稳定\n        await new Promise((resolve) => setTimeout(resolve, 1000))\n\n        // 发送模式切换消息\n        if (currentModel.value === '金种子杯模式') {\n          changeModelSrc.value = '../../static/changeModel-2.png'\n          await wsStore.sendMessage({\n            system_model: currentModel.value,\n            input_type: 3,\n            text: '',\n          })\n          console.log('模式切换消息发送成功')\n        } else {\n          changeModelSrc.value = '../../static/changeModel.png'\n          modelStore.setModel('常规模式')\n          await wsStore.sendMessage({\n            system_model: currentModel.value,\n            input_type: 3,\n            text: '',\n          })\n          console.log('模式切换消息发送成功')\n        }\n\n        uni.showToast({\n          title: '模式切换成功',\n          icon: 'success',\n          duration: 1500,\n        })\n      } catch (error) {\n        console.error('WebSocket操作失败:', error)\n        uni.showToast({\n          title: '切换失败，请稍后再试',\n          icon: 'none',\n        })\n        // 如果失败，回滚UI状态\n        currentModel.value =\n          currentModel.value === '常规模式' ? '金种子杯模式' : '常规模式'\n        bgSrc.value = systemModelConfig[currentModel.value].pic_url\n        if (currentModel.value === '金种子杯模式') {\n          modelStore.setModel('金种子杯模式')\n        } else {\n          modelStore.setModel('常规模式')\n        }\n      }\n    } catch (error) {\n      console.error('切换模式过程中出错:', error)\n      uni.showToast({\n        title: '切换失败，请稍后再试',\n        icon: 'none',\n      })\n    } finally {\n      isTogglingModel.value = false\n    }\n  }\n\n  const handleSubmit = (message) => {\n    console.log(message, 'handleSubmit')\n  }\n\n  // 从服务器获取系统配置\n  const fetchSystemConfig = async () => {\n    try {\n      const res = await request(`${baseUrl}/system/get_system_setting`, 'GET')\n      console.log('获取系统配置', res)\n\n      // 更新shine_point配置\n      if (res.data && res.data.shine_point) {\n        Object.assign(shinePointConfig, res.data.shine_point)\n      }\n\n      // 更新system_model配置\n      if (res.data && res.data.system_model) {\n        // 更新常规模式配置\n        if (res.data.system_model['常规模式']) {\n          systemModelConfig['常规模式'] = res.data.system_model['常规模式']\n        }\n\n        // 更新金种子杯模式配置\n        if (res.data.system_model['金种子杯模式']) {\n          systemModelConfig['金种子杯模式'] =\n            res.data.system_model['金种子杯模式']\n          // 检查金种子杯模式是否可用\n          isGoldModeAvailable.value =\n            !!res.data.system_model['金种子杯模式'].valid\n        }\n\n        // 设置当前背景图\n        bgSrc.value = systemModelConfig[currentModel.value].pic_url\n      }\n    } catch (error) {\n      console.error('获取系统配置失败:', error)\n    }\n  }\n\n  onShow(async () => {\n    sptime.value = new Date().getTime()\n    dmReport(\n      'pv',\n      {},\n      {\n        page: 'homePage',\n        contents: [\n          {\n            page: 'homePage',\n          },\n        ],\n      }\n    )\n    try {\n      // 页面显示时可以进行一些操作\n      console.log('主页面显示')\n      //从后端获取是否有广告\n      const adRes = await request(\n        `${baseUrl}/system/get_activity_notify`,\n        'GET'\n      )\n      console.log('获取广告', adRes)\n      if (adRes.code == 0 && adRes.data.length > 0) {\n        adList.value = adRes.data\n        showAd.value = true\n      }\n      // 获取当前主题\n      const currentSubject = await request(`${baseUrl}/user/user_info`, 'GET')\n      console.log('获取当前主题', currentSubject.data.topic)\n      // 更新主题\n      sbStore.setSubject(currentSubject.data.topic)\n      // 获取系统配置\n      await fetchSystemConfig()\n\n      // 设置当前模式\n      if (isRadio.value) {\n        // 如果是电台模式，直接返回\n        console.log('电台模式下执行的onShow逻辑', isRadio.value)\n        console.log('背景音乐是否正在播放', audioPlayerStore.bgIsPlaying)\n        // audioPlayerStore.stopAllAudio()\n        // 尝试连接WebSocket\n        if (!wsStore.isConnected) {\n          await wsStore.connect()\n          console.log('socket连接成功')\n\n          // 发送连接成功的消息 - 仅在页面首次加载时\n          await wsStore.sendMessage({\n            system_model: currentModel.value,\n            input_type: 3,\n            text: '',\n          })\n        }\n      } else {\n        // 尝试连接WebSocket\n        if (!wsStore.isConnected) {\n          await wsStore.connect()\n          console.log('socket连接成功')\n\n          // 发送连接成功的消息 - 仅在页面首次加载时\n          await wsStore.sendMessage({\n            system_model: currentModel.value,\n            input_type: 3,\n            text: '',\n          })\n          console.log('发送input_type=3的初始消息成功')\n        }\n      }\n    } catch (error) {\n      console.error('页面显示时发生错误:', error)\n    }\n  })\n\n  onHide(async () => {\n    // 页面隐藏时关闭WebSocket连接\n    const endTime = new Date().getTime()\n    const duration = endTime - sptime.value\n    dmReport(\n      'stay',\n      {},\n      {\n        page: 'homePage',\n        sptime: duration,\n      }\n    )\n    console.log('onHide主页面隐藏')\n\n    // 上报当前音频播放状态\n    audioPlayerStore.reportCurrentProgress()\n    console.log('音频播放状态已上报')\n\n    // 停止并清空所有音频队列\n    if (isRadio.value) {\n      // 如果是电台模式，就不停止背景音乐\n      console.log('电台模式下不停止背景音乐onHide', isRadio.value)\n      audioPlayerStore.stopTtsAudio()\n    } else {\n      // audioPlayerStore.stopAllAudio()\n      audioPlayerStore.stopTtsAudio()\n      barrageStore.clearMessages()\n      console.log('停止并清空所有音频队列', '非电台模式下停止背景音乐')\n      // 清空消息列表\n      console.log('清空消息列表')\n    }\n\n    // 关闭WebSocket连接\n    await wsStore.close()\n    console.log('Hidesocket连接关闭')\n  })\n  onShareAppMessage(() => {\n    console.log('onShareAppMessage......')\n    return {\n      title: `不芒一点，陪你世界加一点`,\n      imageUrl: '../../static/share.png',\n      path: '/pages/index/index',\n    }\n  })\n  onShareTimeline(() => {\n    console.log('onShareTimeline......')\n    return {\n      title: `不芒一点，陪你世界加一点`,\n    }\n  })\n</script>\n\n<style lang=\"scss\" scoped>\n  @import './index.scss';\n  .popupshow {\n    position: absolute;\n    z-index: 9999;\n  }\n</style>\n","import MiniProgramPage from '/Users/lynnyang/work/project/xjlab/HBuilderProjects/bumangyidian/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}